{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport store from '@/store';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  component: () => import('@/views/layout'),\n  children: [{\n    path: 'home',\n    component: () => import('@/views/home')\n  }]\n}, {\n  path: '/reg',\n  component: () => import('@/views/register/index.vue')\n}, {\n  path: '/login',\n  component: () => import('@/views/login/index.vue')\n}];\nconst router = new VueRouter({\n  routes\n});\nconst whiteList = ['/login', '/reg'];\n// 全局前置路由守卫\nrouter.beforeEach((to, from, next) => {\n  const token = store.state.token;\n  if (token) {\n    if (!store.state.userInfo.username) {\n      store.dispatch('getUserInfoActions');\n    }\n    next();\n  } else {\n    if (whiteList.includes(to.path)) {\n      next();\n    } else {\n      next('/login');\n    }\n  }\n  // 后面是判断是否已经登录，如果登录了，则该值不为空，就不用重新获取页面\n});\n\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","store","use","routes","path","component","children","router","whiteList","beforeEach","to","from","next","token","state","userInfo","username","dispatch","includes"],"sources":["D:/web ziliao/大事件项目/vue-event/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport store from '@/store'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    component: () => import('@/views/layout'),\n    children: [\n      {\n        path: 'home',\n        component: () => import('@/views/home')\n      }\n    ]\n  },\n  {\n    path: '/reg',\n    component: () => import('@/views/register/index.vue')\n  },\n  {\n    path: '/login',\n    component: () => import('@/views/login/index.vue')\n  }\n\n]\n\nconst router = new VueRouter({\n  routes\n})\nconst whiteList = ['/login', '/reg']\n// 全局前置路由守卫\nrouter.beforeEach((to, from, next) => {\n  const token = store.state.token\n  if (token) {\n    if (!store.state.userInfo.username) {\n      store.dispatch('getUserInfoActions')\n    }\n    next()\n  } else {\n    if (whiteList.includes(to.path)) {\n      next()\n    } else {\n      next('/login')\n    }\n  }\n  // 后面是判断是否已经登录，如果登录了，则该值不为空，就不用重新获取页面\n})\n\nexport default router\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,SAAS;AAE3BF,GAAG,CAACG,GAAG,CAACF,SAAS,CAAC;AAElB,MAAMG,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,gBAAgB,CAAC;EACzCC,QAAQ,EAAE,CACR;IACEF,IAAI,EAAE,MAAM;IACZC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,cAAc;EACxC,CAAC;AAEL,CAAC,EACD;EACED,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,4BAA4B;AACtD,CAAC,EACD;EACED,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,yBAAyB;AACnD,CAAC,CAEF;AAED,MAAME,MAAM,GAAG,IAAIP,SAAS,CAAC;EAC3BG;AACF,CAAC,CAAC;AACF,MAAMK,SAAS,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;AACpC;AACAD,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,KAAK,GAAGZ,KAAK,CAACa,KAAK,CAACD,KAAK;EAC/B,IAAIA,KAAK,EAAE;IACT,IAAI,CAACZ,KAAK,CAACa,KAAK,CAACC,QAAQ,CAACC,QAAQ,EAAE;MAClCf,KAAK,CAACgB,QAAQ,CAAC,oBAAoB,CAAC;IACtC;IACAL,IAAI,EAAE;EACR,CAAC,MAAM;IACL,IAAIJ,SAAS,CAACU,QAAQ,CAACR,EAAE,CAACN,IAAI,CAAC,EAAE;MAC/BQ,IAAI,EAAE;IACR,CAAC,MAAM;MACLA,IAAI,CAAC,QAAQ,CAAC;IAChB;EACF;EACA;AACF,CAAC,CAAC;;AAEF,eAAeL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}