{"ast":null,"code":"import { updateUserInfoAPI } from '@/api/index.js';\nexport default {\n  name: 'UserInfo',\n  data() {\n    return {\n      userForm: {\n        username: this.$store.state.userInfo.username,\n        // 默认值用登录后获取到的用户名\n        nickname: '',\n        email: ''\n      },\n      // 表单的验证规则对象\n      userFormRules: {\n        nickname: [{\n          required: true,\n          message: '请输入用户昵称',\n          trigger: 'blur'\n        }, {\n          pattern: /^\\S{1,10}$/,\n          message: '昵称必须是1-10位的非空字符串',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入用户邮箱',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '邮箱格式不正确',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitFn() {\n      this.$refs.userFormRef.validate(async valid => {\n        if (valid) {\n          console.log(this.userForm);\n          this.userForm.id = this.$store.state.userInfo.id;\n          const {\n            data: res\n          } = await updateUserInfoAPI(this.userForm);\n          // console.log(res)\n          if (res.code !== 0) return this.$message.error('更新用户信息失败！');\n          // 更新用户信息成功，刷新 Vuex 中的数据\n          this.$message.success('更新成功！');\n          // 重新让vuex获取下最新的用户数据\n          this.$store.dispatch('getUserInfoActions');\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["updateUserInfoAPI","name","data","userForm","username","$store","state","userInfo","nickname","email","userFormRules","required","message","trigger","pattern","type","methods","submitFn","$refs","userFormRef","validate","valid","console","log","id","res","code","$message","error","success","dispatch"],"sources":["src/views/user/userInfo.vue"],"sourcesContent":["<template>\r\n  <el-card class=\"box-card\">\r\n    <div slot=\"header\" class=\"clearfix\">\r\n      <span>基本资料</span>\r\n    </div>\r\n    <!-- 表单 -->\r\n    <el-form\r\n      :model=\"userForm\"\r\n      :rules=\"userFormRules\"\r\n      ref=\"userFormRef\"\r\n      label-width=\"100px\"\r\n    >\r\n      <el-form-item label=\"登录名称\" prop=\"username\">\r\n        <el-input v-model=\"userForm.username\" disabled></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"用户昵称\" prop=\"nickname\">\r\n        <el-input\r\n          v-model=\"userForm.nickname\"\r\n          minlength=\"1\"\r\n          maxlength=\"10\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"用户邮箱\" prop=\"email\">\r\n        <el-input v-model=\"userForm.email\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitFn\">提交修改</el-button>\r\n        <el-button>重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport { updateUserInfoAPI } from '@/api/index.js'\r\nexport default {\r\n  name: 'UserInfo',\r\n  data () {\r\n    return {\r\n      userForm: {\r\n        username: this.$store.state.userInfo.username, // 默认值用登录后获取到的用户名\r\n        nickname: '',\r\n        email: ''\r\n      },\r\n      // 表单的验证规则对象\r\n      userFormRules: {\r\n        nickname: [\r\n          { required: true, message: '请输入用户昵称', trigger: 'blur' },\r\n          { pattern: /^\\S{1,10}$/, message: '昵称必须是1-10位的非空字符串', trigger: 'blur' }\r\n        ],\r\n        email: [\r\n          { required: true, message: '请输入用户邮箱', trigger: 'blur' },\r\n          { type: 'email', message: '邮箱格式不正确', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    submitFn () {\r\n      this.$refs.userFormRef.validate(async valid => {\r\n        if (valid) {\r\n          console.log(this.userForm)\r\n          this.userForm.id = this.$store.state.userInfo.id\r\n          const { data: res } = await updateUserInfoAPI(this.userForm)\r\n          // console.log(res)\r\n          if (res.code !== 0) return this.$message.error('更新用户信息失败！')\r\n          // 更新用户信息成功，刷新 Vuex 中的数据\r\n          this.$message.success('更新成功！')\r\n          // 重新让vuex获取下最新的用户数据\r\n          this.$store.dispatch('getUserInfoActions')\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-form {\r\n  width: 500px;\r\n}\r\n</style>\r\n"],"mappings":"AAkCA,SAAAA,iBAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,QAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAC,QAAA,CAAAH,QAAA;QAAA;QACAI,QAAA;QACAC,KAAA;MACA;MACA;MACAC,aAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,OAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,KAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAE,IAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAG,OAAA;IACAC,SAAA;MACA,KAAAC,KAAA,CAAAC,WAAA,CAAAC,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACAC,OAAA,CAAAC,GAAA,MAAApB,QAAA;UACA,KAAAA,QAAA,CAAAqB,EAAA,QAAAnB,MAAA,CAAAC,KAAA,CAAAC,QAAA,CAAAiB,EAAA;UACA;YAAAtB,IAAA,EAAAuB;UAAA,UAAAzB,iBAAA,MAAAG,QAAA;UACA;UACA,IAAAsB,GAAA,CAAAC,IAAA,oBAAAC,QAAA,CAAAC,KAAA;UACA;UACA,KAAAD,QAAA,CAAAE,OAAA;UACA;UACA,KAAAxB,MAAA,CAAAyB,QAAA;QACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}