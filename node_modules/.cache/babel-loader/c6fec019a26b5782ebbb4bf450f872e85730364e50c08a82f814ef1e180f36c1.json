{"ast":null,"code":"import { updatePwdAPI } from '@/api/index.js';\nexport default {\n  name: 'UserPwd',\n  data() {\n    // 新旧密码不可相同\n    const samePwd = (rules, value, callback) => {\n      if (this.pwdForm.old_pwd === value) {\n        callback(new Error('新旧密码不能相同'));\n      } else {\n        callback();\n      }\n    };\n    // 新密码检查\n    const rePwd = (rules, value, callback) => {\n      if (this.pwdForm.new_pwd !== value) {\n        callback(new Error('两次输入的密码不相同'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      // 表单的数据对象\n      pwdForm: {\n        old_pwd: '',\n        new_pwd: '',\n        re_pwd: ''\n      },\n      // 表单的验证规则对象\n      pwdFormRules: {\n        old_pwd: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          pattern: /^\\S{6,15}$/,\n          message: '密码长度必须是6-15位的非空字符串',\n          trigger: 'blur'\n        }],\n        new_pwd: [{\n          required: true,\n          message: '请输入新密码',\n          trigger: 'blur'\n        }, {\n          pattern: /^\\S{6,15}$/,\n          message: '密码长度必须是6-15位的非空字符串',\n          trigger: 'blur'\n        }, {\n          validator: samePwd,\n          trigger: 'blur'\n        }],\n        re_pwd: [{\n          required: true,\n          message: '请再次确认新密码',\n          trigger: 'blur'\n        }, {\n          pattern: /^\\S{6,15}$/,\n          message: '密码长度必须是6-15位的非空字符串',\n          trigger: 'blur'\n        }, {\n          validator: rePwd,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    updatePwdFn() {\n      this.$refs.pwdFormRef.validate(async valid => {\n        if (valid) {\n          const {\n            data: res\n          } = await updatePwdAPI(this.pwdForm);\n          if (res.data !== 0) return this.$message.error('更新密码失败');\n          this.$message.success('更新密码成功');\n          this.$refs.pwdFormRef.resetFields();\n        } else {\n          return false;\n        }\n        this.$store.dispatch('getUserInfoActions');\n      });\n    },\n    resetFn() {\n      this.$refs.pwdFormRef.resetFields();\n    }\n  }\n};","map":{"version":3,"names":["updatePwdAPI","name","data","samePwd","rules","value","callback","pwdForm","old_pwd","Error","rePwd","new_pwd","re_pwd","pwdFormRules","required","message","trigger","pattern","validator","methods","updatePwdFn","$refs","pwdFormRef","validate","valid","res","$message","error","success","resetFields","$store","dispatch","resetFn"],"sources":["src/views/user/userPwd.vue"],"sourcesContent":["<template>\r\n  <el-card class=\"box-card\">\r\n    <div slot=\"header\" class=\"clearfix\">\r\n      <span>重置密码</span>\r\n    </div>\r\n    <!-- 表单 -->\r\n    <el-form :model=\"pwdForm\" :rules=\"pwdFormRules\" ref=\"pwdFormRef\" label-width=\"100px\">\r\n      <el-form-item label=\"原密码\" prop=\"old_pwd\">\r\n        <el-input v-model=\"pwdForm.old_pwd\" type=\"password\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"新密码\" prop=\"new_pwd\">\r\n        <el-input v-model=\"pwdForm.new_pwd\" type=\"password\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"确认新密码\" prop=\"re_pwd\">\r\n        <el-input v-model=\"pwdForm.re_pwd\" type=\"password\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"updatePwdFn\" >修改密码</el-button>\r\n        <el-button @click=\"resetFn\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport { updatePwdAPI } from '@/api/index.js'\r\nexport default {\r\n  name: 'UserPwd',\r\n  data () {\r\n    // 新旧密码不可相同\r\n    const samePwd = (rules, value, callback) => {\r\n      if (this.pwdForm.old_pwd === value) {\r\n        callback(new Error('新旧密码不能相同'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    // 新密码检查\r\n    const rePwd = (rules, value, callback) => {\r\n      if (this.pwdForm.new_pwd !== value) {\r\n        callback(new Error('两次输入的密码不相同'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      // 表单的数据对象\r\n      pwdForm: {\r\n        old_pwd: '',\r\n        new_pwd: '',\r\n        re_pwd: ''\r\n      },\r\n\r\n      // 表单的验证规则对象\r\n      pwdFormRules: {\r\n        old_pwd: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { pattern: /^\\S{6,15}$/, message: '密码长度必须是6-15位的非空字符串', trigger: 'blur' }\r\n        ],\r\n        new_pwd: [\r\n          { required: true, message: '请输入新密码', trigger: 'blur' },\r\n          { pattern: /^\\S{6,15}$/, message: '密码长度必须是6-15位的非空字符串', trigger: 'blur' },\r\n          { validator: samePwd, trigger: 'blur' }\r\n        ],\r\n        re_pwd: [\r\n          { required: true, message: '请再次确认新密码', trigger: 'blur' },\r\n          { pattern: /^\\S{6,15}$/, message: '密码长度必须是6-15位的非空字符串', trigger: 'blur' },\r\n          { validator: rePwd, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    updatePwdFn () {\r\n      this.$refs.pwdFormRef.validate(async valid => {\r\n        if (valid) {\r\n          const { data: res } = await updatePwdAPI(this.pwdForm)\r\n          if (res.data !== 0) return this.$message.error('更新密码失败')\r\n          this.$message.success('更新密码成功')\r\n          this.$refs.pwdFormRef.resetFields()\r\n        } else {\r\n          return false\r\n        }\r\n\r\n        this.$store.dispatch('getUserInfoActions')\r\n      })\r\n    },\r\n    resetFn () {\r\n      this.$refs.pwdFormRef.resetFields()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-form {\r\n  width: 500px;\r\n}\r\n</style>\r\n"],"mappings":"AAyBA,SAAAA,YAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;IACA,MAAAC,OAAA,GAAAA,CAAAC,KAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,SAAAC,OAAA,CAAAC,OAAA,KAAAH,KAAA;QACAC,QAAA,KAAAG,KAAA;MACA;QACAH,QAAA;MACA;IACA;IACA;IACA,MAAAI,KAAA,GAAAA,CAAAN,KAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,SAAAC,OAAA,CAAAI,OAAA,KAAAN,KAAA;QACAC,QAAA,KAAAG,KAAA;MACA;QACAH,QAAA;MACA;IACA;IACA;MACA;MACAC,OAAA;QACAC,OAAA;QACAG,OAAA;QACAC,MAAA;MACA;MAEA;MACAC,YAAA;QACAL,OAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,OAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,OAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,OAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAE,SAAA,EAAAf,OAAA;UAAAa,OAAA;QAAA,EACA;QACAJ,MAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,OAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAE,SAAA,EAAAR,KAAA;UAAAM,OAAA;QAAA;MAEA;IACA;EACA;EACAG,OAAA;IACAC,YAAA;MACA,KAAAC,KAAA,CAAAC,UAAA,CAAAC,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA;YAAAtB,IAAA,EAAAuB;UAAA,UAAAzB,YAAA,MAAAO,OAAA;UACA,IAAAkB,GAAA,CAAAvB,IAAA,oBAAAwB,QAAA,CAAAC,KAAA;UACA,KAAAD,QAAA,CAAAE,OAAA;UACA,KAAAP,KAAA,CAAAC,UAAA,CAAAO,WAAA;QACA;UACA;QACA;QAEA,KAAAC,MAAA,CAAAC,QAAA;MACA;IACA;IACAC,QAAA;MACA,KAAAX,KAAA,CAAAC,UAAA,CAAAO,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}