[{"D:\\web ziliao\\大事件项目\\vue-event\\src\\main.js":"1","D:\\web ziliao\\大事件项目\\vue-event\\src\\App.vue":"2","D:\\web ziliao\\大事件项目\\vue-event\\src\\elementUI\\index.js":"3","D:\\web ziliao\\大事件项目\\vue-event\\src\\store\\index.js":"4","D:\\web ziliao\\大事件项目\\vue-event\\src\\router\\index.js":"5","D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\user\\userAvatar.vue":"6","D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\article\\artList.vue":"7","D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\login\\index.vue":"8","D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\user\\userInfo.vue":"9","D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\register\\index.vue":"10","D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\user\\userPwd.vue":"11","D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\article\\artCate.vue":"12","D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\home\\index.vue":"13","D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\layout\\index.vue":"14","D:\\web ziliao\\大事件项目\\vue-event\\src\\api\\index.js":"15","D:\\web ziliao\\大事件项目\\vue-event\\src\\utils\\request.js":"16"},{"size":595,"mtime":1680055937471,"results":"17","hashOfConfig":"18"},{"size":205,"mtime":1679578088895,"results":"19","hashOfConfig":"18"},{"size":159,"mtime":1680178289078,"results":"20","hashOfConfig":"18"},{"size":954,"mtime":1679579490774,"results":"21","hashOfConfig":"18"},{"size":1637,"mtime":1679926681147,"results":"22","hashOfConfig":"18"},{"size":1906,"mtime":1679805137687,"results":"23","hashOfConfig":"18"},{"size":12019,"mtime":1680078108378,"results":"24","hashOfConfig":"18"},{"size":3019,"mtime":1679572445862,"results":"25","hashOfConfig":"18"},{"size":2660,"mtime":1679732041442,"results":"26","hashOfConfig":"18"},{"size":3811,"mtime":1679554673091,"results":"27","hashOfConfig":"18"},{"size":3288,"mtime":1679812575376,"results":"28","hashOfConfig":"18"},{"size":5231,"mtime":1680076065099,"results":"29","hashOfConfig":"18"},{"size":12227,"mtime":1679726460931,"results":"30","hashOfConfig":"18"},{"size":5065,"mtime":1680076181274,"results":"31","hashOfConfig":"18"},{"size":2757,"mtime":1680077394944,"results":"32","hashOfConfig":"18"},{"size":1555,"mtime":1680076735384,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f4pgye",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\web ziliao\\大事件项目\\vue-event\\src\\main.js",[],"D:\\web ziliao\\大事件项目\\vue-event\\src\\App.vue",[],"D:\\web ziliao\\大事件项目\\vue-event\\src\\elementUI\\index.js",[],"D:\\web ziliao\\大事件项目\\vue-event\\src\\store\\index.js",["70"],"import Vue from 'vue'\nimport Vuex from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\nimport { getUserInfoAPI } from '@/api'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    token: '', // 保存token字符串\n    userInfo: {}// 用来保存用户信息\n  },\n  getters: {\n    nickname: state => state.userInfo.nickname, // 昵称\n    username: state => state.userInfo.username, // 用户名\n    user_pic: state => state.userInfo.user_pic // 用户头像\n  },\n  mutations: {\n    // 保存token\n    updateToken (state, val) {\n      state.token = val\n    },\n    updateUserInfo (state, val) {\n      state.userInfo = val\n    }\n  },\n  actions: {\n    // 用来请求用户的信息\n    async getUserInfoActions (store) {\n      const res = await getUserInfoAPI()\n      console.log(res)\n      store.commit('updateUserInfo', res.data.data)\n    }\n  },\n  modules: {\n  },\n  plugins: [createPersistedState()]\n\n  // 注入持久化插件\n})\n","D:\\web ziliao\\大事件项目\\vue-event\\src\\router\\index.js",[],"D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\user\\userAvatar.vue",["71"],"<template>\r\n  <el-card class=\"box-card\">\r\n    <div slot=\"header\" class=\"clearfix\">\r\n      <span>更换头像</span>\r\n    </div>\r\n    <div>\r\n      <!-- 图片，用来展示用户选择的头像 -->\r\n      <img v-if=\"!avatar\" class=\"the_img\" src=\"../../assets/images/avatar.jpg\" alt=\"\" />\r\n      <img v-else class=\"the_img\" :src=\"avatar\" alt=\"\">\r\n\r\n      <!-- 按钮区域 -->\r\n      <div class=\"btn-box\">\r\n        <input type=\"file\" accept=\"image/*\" style=\"display: none\" ref=\"iptRef\" @change=\"onFileChange\" />\r\n        <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"chooseImg\">选择图片</el-button>\r\n        <el-button type=\"success\" icon=\"el-icon-upload\" :disabled=\"avatar === ''\" @click=\"uploadFn\">上传头像</el-button>\r\n      </div>\r\n    </div>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport { updateUserAvatarAPI } from '@/api/index.js'\r\nexport default {\r\n  name: 'UserAvatar',\r\n  data () {\r\n    return {\r\n      avatar: ''// 保存图片链接预览图片\r\n    }\r\n  },\r\n  methods: {\r\n    chooseImg () {\r\n      this.$refs.iptRef.click()\r\n    },\r\n    onFileChange (e) {\r\n      const files = e.target.files\r\n      if (files.length === 0) {\r\n        // 如果文件长度为0，说明没有选择图片\r\n        this.avatar = ' '\r\n      } else {\r\n        console.log(files[0])\r\n        const fr = new FileReader()\r\n        fr.readAsDataURL(files[0])\r\n        fr.onload = e => {\r\n          this.avatar = e.target.result\r\n        }\r\n      }\r\n    },\r\n    async uploadFn () {\r\n      const { data: res } = await updateUserAvatarAPI(this.avatar)\r\n      if (res.code !== 0) return this.$message.error(res.message)\r\n      this.$message.success(res.message)\r\n      this.$store.dispatch('getUserInfoActions')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.btn-box {\r\n  margin-top: 10px;\r\n}\r\n.preview {\r\n  object-fit: cover;\r\n}\r\n.the_img{\r\n    width: 350px;\r\n    height: 350px;\r\n}\r\n</style>\r\n","D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\article\\artList.vue",[],"D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\login\\index.vue",[],"D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\user\\userInfo.vue",["72"],"<template>\r\n  <el-card class=\"box-card\">\r\n    <div slot=\"header\" class=\"clearfix\">\r\n      <span>基本资料</span>\r\n    </div>\r\n    <!-- 表单 -->\r\n    <el-form\r\n      :model=\"userForm\"\r\n      :rules=\"userFormRules\"\r\n      ref=\"userFormRef\"\r\n      label-width=\"100px\"\r\n    >\r\n      <el-form-item label=\"登录名称\" prop=\"username\">\r\n        <el-input v-model=\"userForm.username\" disabled></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"用户昵称\" prop=\"nickname\">\r\n        <el-input\r\n          v-model=\"userForm.nickname\"\r\n          minlength=\"1\"\r\n          maxlength=\"10\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"用户邮箱\" prop=\"email\">\r\n        <el-input v-model=\"userForm.email\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitFn\">提交修改</el-button>\r\n        <el-button @click=\"resetFn\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport { updateUserInfoAPI } from '@/api/index.js'\r\nexport default {\r\n  name: 'UserInfo',\r\n  data () {\r\n    return {\r\n      userForm: {\r\n        username: this.$store.state.userInfo.username, // 默认值用登录后获取到的用户名\r\n        nickname: '',\r\n        email: ''\r\n      },\r\n      // 表单的验证规则对象\r\n      userFormRules: {\r\n        nickname: [\r\n          { required: true, message: '请输入用户昵称', trigger: 'blur' },\r\n          { pattern: /^\\S{1,10}$/, message: '昵称必须是1-10位的非空字符串', trigger: 'blur' }\r\n        ],\r\n        email: [\r\n          { required: true, message: '请输入用户邮箱', trigger: 'blur' },\r\n          { type: 'email', message: '邮箱格式不正确', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    submitFn () {\r\n      this.$refs.userFormRef.validate(async valid => {\r\n        if (valid) {\r\n          console.log(this.userForm)\r\n          this.userForm.id = this.$store.state.userInfo.id\r\n          const { data: res } = await updateUserInfoAPI(this.userForm)\r\n          // console.log(res)\r\n          if (res.code !== 0) return this.$message.error('更新用户信息失败！')\r\n          // 更新用户信息成功，刷新 Vuex 中的数据\r\n          this.$message.success('更新成功！')\r\n          // 重新让vuex获取下最新的用户数据\r\n          this.$store.dispatch('getUserInfoActions')\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    resetFn () {\r\n      this.$refs.userFormRef.resetFields()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-form {\r\n  width: 500px;\r\n}\r\n</style>\r\n","D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\register\\index.vue",["73","74"],"<template>\r\n  <!-- 注册页面的整体盒子 -->\r\n  <div class=\"reg-container\">\r\n    <!-- 注册的盒子 -->\r\n    <div class=\"reg-box\">\r\n      <!-- 标题的盒子 -->\r\n      <div class=\"title-box\"></div>\r\n      <!-- 注册的表单区域 -->\r\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rulesObj\" >\r\n\r\n          <el-form-item prop=\"username\">\r\n            <el-input v-model=\"form.username\"  placeholder=\"用户名\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item prop=\"password\">\r\n            <el-input type = \"password\" v-model=\"form.password\"  placeholder=\"密码\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item prop=\"repassword\">\r\n            <el-input type = \"password\" v-model=\"form.repassword\"  placeholder=\"请再次确认密码\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item>\r\n            <el-button class=\"btn-reg \" type=\"primary\" @click=\"registerFn\">注册</el-button>\r\n            <el-link type=\"info\" @click=\"$router.push('/login')\">去登陆</el-link>\r\n          </el-form-item>\r\n        </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { registerAPI } from '@/api/index.js'\r\nexport default {\r\n\r\n  name: 'my-register',\r\n  data () {\r\n    const samePwdFn = (rule, value, callback) => {\r\n      if (value !== this.form.password) {\r\n        // 如果验证失败，则调用 回调函数时，指定一个 Error 对象。\r\n        callback(new Error('两次输入的密码不一致!'))\r\n      } else {\r\n        // 如果验证成功，则直接调用 callback 回调函数即可。\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      // 表单的数据对象\r\n      form: {\r\n        username: '',\r\n        password: '',\r\n        repassword: ''\r\n      },\r\n      // 表单的规则校验对象\r\n      rulesObj: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          {\r\n            pattern: /^[a-zA-Z0-9]{1,10}$/,\r\n            message: '用户名必须是1-10的大小写字母数字',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          {\r\n            pattern: /^\\S{6,15}$/,\r\n            message: '密码必须是6-15的非空字符',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        repassword: [\r\n          { required: true, message: '请再次输入密码', trigger: 'blur' },\r\n          { validator: samePwdFn, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    registerFn () {\r\n      // console.log('注册的点击事件')\r\n      // JS兜底校验\r\n      this.$refs.form.validate(async valid => {\r\n        if (valid) {\r\n          // 通过校验\r\n          console.log(this.form)\r\n          const { data: res } = await registerAPI(this.form)\r\n          console.log(res)\r\n          // $message是elementUI在Vue的原型链上添加的弹窗提示，$message属性\r\n          if (res.code !== 0) return this.$message.error(res.message)\r\n          this.$message.success(res.message)\r\n          this.$router.push('/login')\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.reg-container {\r\n  background: url('../../assets/images/login_bg.jpg') center;\r\n  background-size: cover;\r\n  height: 100%;\r\n\r\n  .reg-box {\r\n    width: 400px;\r\n    height: 335px;\r\n    background-color: #fff;\r\n    border-radius: 3px;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    padding: 0 30px;\r\n    box-sizing: border-box;\r\n\r\n    .title-box {\r\n      height: 60px;\r\n      background: url('../../assets/images/login_title.png') center no-repeat;\r\n    }\r\n\r\n    .btn-reg {\r\n      width: 100%;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\user\\userPwd.vue",[],"D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\article\\artCate.vue",[],"D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\home\\index.vue",[],"D:\\web ziliao\\大事件项目\\vue-event\\src\\views\\layout\\index.vue",[],"D:\\web ziliao\\大事件项目\\vue-event\\src\\api\\index.js",[],"D:\\web ziliao\\大事件项目\\vue-event\\src\\utils\\request.js",[],{"ruleId":"75","severity":1,"message":"76","line":31,"column":7,"nodeType":"77","messageId":"78","endLine":31,"endColumn":18},{"ruleId":"75","severity":1,"message":"76","line":40,"column":9,"nodeType":"77","messageId":"78","endLine":40,"endColumn":20},{"ruleId":"75","severity":1,"message":"76","line":62,"column":11,"nodeType":"77","messageId":"78","endLine":62,"endColumn":22},{"ruleId":"75","severity":1,"message":"76","line":86,"column":11,"nodeType":"77","messageId":"78","endLine":86,"endColumn":22},{"ruleId":"75","severity":1,"message":"76","line":88,"column":11,"nodeType":"77","messageId":"78","endLine":88,"endColumn":22},"no-console","Unexpected console statement.","MemberExpression","unexpected"]