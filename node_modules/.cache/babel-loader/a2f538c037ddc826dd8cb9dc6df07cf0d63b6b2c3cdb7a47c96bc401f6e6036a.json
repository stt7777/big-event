{"ast":null,"code":"export default {\n  name: 'my-register',\n  data() {\n    const samePwdFn = (rule, value, callback) => {\n      if (value !== this.regForm.password) {\n        // 如果验证失败，则调用 回调函数时，指定一个 Error 对象。\n        callback(new Error('两次输入的密码不一致!'));\n      } else {\n        // 如果验证成功，则直接调用 callback 回调函数即可。\n        callback();\n      }\n    };\n    return {\n      // 表单的数据对象\n      form: {\n        username: '',\n        password: '',\n        repassword: ''\n      },\n      // 表单的规则校验对象\n      rulesObj: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          pattern: /^[a-zA-Z0-9]{1-10}$/,\n          message: '用户名必须是1-10的数字和大小写字母',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          pattern: /^\\S{6,15}$/,\n          message: '密码必须是6-15的非空字符',\n          trigger: 'blur'\n        }],\n        repassword: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          validator: samePwdFn,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    registerFn() {\n      console.log('注册的点击事件');\n    }\n  }\n};","map":{"version":3,"names":["name","data","samePwdFn","rule","value","callback","regForm","password","Error","form","username","repassword","rulesObj","required","message","trigger","pattern","validator","methods","registerFn","console","log"],"sources":["src/views/register/index.vue"],"sourcesContent":["<template>\r\n  <!-- 注册页面的整体盒子 -->\r\n  <div class=\"reg-container\">\r\n    <!-- 注册的盒子 -->\r\n    <div class=\"reg-box\">\r\n      <!-- 标题的盒子 -->\r\n      <div class=\"title-box\"></div>\r\n      <!-- 注册的表单区域 -->\r\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rulesObj\" >\r\n\r\n          <el-form-item prop=\"username\">\r\n            <el-input v-model=\"form.username\"  placeholder=\"用户名\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item prop=\"password\">\r\n            <el-input v-model=\"form.password\"  placeholder=\"密码\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item>\r\n            <el-input v-model=\"form.repassword\"  placeholder=\"请再次确认密码\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item prop=\"repassword\">\r\n            <el-button class=\"btn-reg \" type=\"primary\" @click=\"registerFn\">注册</el-button>\r\n            <el-link type=\"info\">去登陆</el-link>\r\n          </el-form-item>\r\n        </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'my-register',\r\n  data () {\r\n    const samePwdFn = (rule, value, callback) => {\r\n      if (value !== this.regForm.password) {\r\n        // 如果验证失败，则调用 回调函数时，指定一个 Error 对象。\r\n        callback(new Error('两次输入的密码不一致!'))\r\n      } else {\r\n        // 如果验证成功，则直接调用 callback 回调函数即可。\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      // 表单的数据对象\r\n      form: {\r\n        username: '',\r\n        password: '',\r\n        repassword: ''\r\n      },\r\n      // 表单的规则校验对象\r\n      rulesObj: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          {\r\n            pattern: /^[a-zA-Z0-9]{1-10}$/,\r\n            message: '用户名必须是1-10的数字和大小写字母',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          {\r\n            pattern: /^\\S{6,15}$/,\r\n            message: '密码必须是6-15的非空字符',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        repassword: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          { validator: samePwdFn, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    registerFn () {\r\n      console.log('注册的点击事件')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.reg-container {\r\n  background: url('../../assets/images/login_bg.jpg') center;\r\n  background-size: cover;\r\n  height: 100%;\r\n\r\n  .reg-box {\r\n    width: 400px;\r\n    height: 335px;\r\n    background-color: #fff;\r\n    border-radius: 3px;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    padding: 0 30px;\r\n    box-sizing: border-box;\r\n\r\n    .title-box {\r\n      height: 60px;\r\n      background: url('../../assets/images/login_title.png') center no-repeat;\r\n    }\r\n\r\n    .btn-reg {\r\n      width: 100%;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAiCA;EACAA,IAAA;EACAC,KAAA;IACA,MAAAC,SAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA,UAAAE,OAAA,CAAAC,QAAA;QACA;QACAF,QAAA,KAAAG,KAAA;MACA;QACA;QACAH,QAAA;MACA;IACA;IACA;MACA;MACAI,IAAA;QACAC,QAAA;QACAH,QAAA;QACAI,UAAA;MACA;MACA;MACAC,QAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UACAC,OAAA;UACAF,OAAA;UACAC,OAAA;QACA,EACA;QACAR,QAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UACAC,OAAA;UACAF,OAAA;UACAC,OAAA;QACA,EACA;QACAJ,UAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAE,SAAA,EAAAf,SAAA;UAAAa,OAAA;QAAA;MAEA;IACA;EACA;EACAG,OAAA;IACAC,WAAA;MACAC,OAAA,CAAAC,GAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}